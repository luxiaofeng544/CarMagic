package com.lemon.pay;import android.text.TextUtils;import java.util.HashMap;import java.util.Map;public class PayResult {    private String resultStatus;    private String result;    private String memo;    private Map<String, String> resultMap;    public PayResult(String rawResult) {        resultMap = new HashMap<>();        if (TextUtils.isEmpty(rawResult))            return;        String[] resultParams = rawResult.split(";");        for (String resultParam : resultParams) {            if (resultParam.startsWith("resultStatus")) {                resultStatus = gatValue(resultParam, "resultStatus");            }            if (resultParam.startsWith("result")) {                result = gatValue(resultParam, "result");                resultMap = parseParams(result);            }            if (resultParam.startsWith("memo")) {                memo = gatValue(resultParam, "memo");            }        }    }    public String getResultField(String key){        return resultMap.get(key);    }    /**     * 解析出url参数中的键值对     * 如 "index.jsp?Action=del&id=123"，解析出Action:del,id:123存入map中     *     * @param URL url地址     * @return url请求参数部分     */    public static Map<String, String> parseParams(String strUrlParam) {        Map<String, String> mapRequest = new HashMap<String, String>();        String[] arrSplit = null;        if (strUrlParam == null) {            return mapRequest;        }        //每个键值为一组 www.2cto.com        arrSplit = strUrlParam.split("[&]");        for (String strSplit : arrSplit) {            String[] arrSplitEqual = null;            arrSplitEqual = strSplit.split("[=]");            //解析出键值            if (arrSplitEqual.length > 1) {                //正确解析                mapRequest.put(arrSplitEqual[0], arrSplitEqual[1].replaceAll("\"",""));            } else {                if (arrSplitEqual[0] != "") {                    //只有参数没有值，不加入                    mapRequest.put(arrSplitEqual[0], "");                }            }        }        return mapRequest;    }    public static void main(String[] args){        String param = "partner=\"2088101568358171\"&seller_id=\"xxx@alipay.com\"&out_trade_no=\"0819145412-6177\"&subject=\"测试\"&body=\"测试测试\"&total_fee=\"0.01\"&notify_url=\"http://notify.msp.hk/notify.htm\"&service=\"mobile.securitypay.pay\"&payment_type=\"1\"&_input_charset=\"utf-8\"&it_b_pay=\"30m\"&success=\"true\"&sign_type=\"RSA\"&sign=\"hkFZr+zE9499nuqDNLZEF7W75RFFPsly876QuRSeN8WMaUgcdR00IKy5ZyBJ4eldhoJ/2zghqrD4E2G2mNjs3aE+HCLiBXrPDNdLKCZgSOIqmv46TfPTEqopYfhs+o5fZzXxt34fwdrzN4mX6S13cr3UwmEV4L3Ffir/02RBVtU=\"";        Map<String, String> params = parseParams(param);        System.out.println();    }    @Override    public String toString() {        return "resultStatus={" + resultStatus + "};memo={" + memo                + "};result={" + result + "}";    }    private String gatValue(String content, String key) {        String prefix = key + "={";        return content.substring(content.indexOf(prefix) + prefix.length(),                content.lastIndexOf("}"));    }    /**     * @return the resultStatus     */    public String getResultStatus() {        return resultStatus;    }    /**     * @return the memo     */    public String getMemo() {        return memo;    }    /**     * @return the result     */    public String getResult() {        return result;    }}